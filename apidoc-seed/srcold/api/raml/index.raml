#%RAML 0.8
---
title: API Resource Example
baseUri: https://localhost/api/{version}
version: v1
protocols: [HTTPS]
mediaType: application/json

traits:
  - private: !include _traits/private.raml

# GET /organizations
# ====================================
/organizations:
  description: Organizations who edit facts and listen sensors.
  get:
    description: Get all organizations stored in the bd.
    responses:
      200:
        body:
          application/json:
            example: |
              {[{ "id" : 1, "name" : "AMT"}]}


  # POST /organizations
  # ====================================
  post:
    description: Create an organization.
    body:
      application/json:
        example: |
          {"name" : "AMT", "contact_id" : "id" }
    responses:
      201:
        body:
          application/json:
            example: |
              { "id" : 1, "name" : "AMT", "contact_id" : "id" }

  # GET /organizations/:id
  # ====================================
  /{id}:
    get:
      description: Retrieve a organization. A user work to only one organization.
      responses:
        200:
          body:
            application/json:
              example: |
                [{ "id" : "1", "name" : "AMT", "users" : [{"id" : "1", "login" : "smith", "name" : "Smith"}], "contact_id" : "id"}]

    # PUT /organizations/:id
    # ====================================
    put:
      description : Update organization
      body:
        application/json:
          example: |
            { ["name" : "NameOfOrganization", "users" : [{"id" : "1", "login" : "username", "name" : "Smith"}], "contact_id" : "id"}] }

      responses:
        200:
          body:
            application/json:
              example: |
                { [{ "id" : "1", "name" : "NameOfOrganization", "users" : [{"id" : "1", "login" : "username", "name" : "Smith"}], "contact_id" : "id"}] }
    
    # DELETE /organizations/:id
    # ====================================
    delete:
      description: Delete an organization if there are just a person of contactg and no users, sensors, or facts.  

# GET /users
# ====================================
/users:
  get:
     description: Get all users
     responses :
       200:
         body:
           application/json:
             example: |
               [{"id" : "1", "login" : "username", "name" : "Smith", "contact" : "true"}]
  
  description: A user work in organization.
  
  # POST /users
  # ====================================
  post:
    description: Create an user.
    body:
      application/json:
        example: |
          { [ {"login" : "username", "pass": "aasfkpaoj3joi23j09djdasidas", "name" : "Smith"}] }
    responses:
      201:
        body:
          application/json:
            example: |
              {"id" : "1", "login" : "username", "pass": "aasfkpaoj3joi23j09djdasidas", "name" : "Smith", "contact" : "false" }
  
  # GET /users/:id
  # ====================================
  /{id}:
    get:
      description: Get a user.
      responses:
        200:
          body:
            application/json:
              example: |
                { "id" : 1, "username" : "usernameofuser", "isContactPerson" : "true/false" }
        404:
          description: The resource was not found.
    
    # PUT /users/:id
    # ====================================
    put:
      description: Update infos of a user.
      body:
        application/json:
          example: |
            {"login" : "username", "pass": "aasfkpaoj3joi23j09djdasidas", "name" : "Smith", "contact" : "false"}
    
    # DELETE /users/:id
    # ====================================
    delete:
      description: Delete a resource.

# GET /sensors
# ====================================
/sensors:
  get:
    description: Get all sensors.
    responses:
      200:
        body:
          application/json:
            example: |
             [{"id":1, "create_date": "2014-08-11"}]
    
  # POST /sensors
  # ====================================
  post:
    description: Create a sensor.
    body:
      application/json:
        example: |
          {"create_date": "2014-08-11"}
    responses:
      201:
        body:
          application/json:
            example: |
              { "id" : 1, "create_date": "2014-08-11"}
  /{id}:
  # GET /sensors/:id
  # ====================================
    get:
      description: Retrieve a resource.
      responses:
        200:
          body:
            application/json:
              example: |
                {"id":1, "create_date": "2014-08-11"}
        404:
          description: The resource was not found.

    # GET /sensors/:id
    # ====================================
    delete:
      description: Delete a resource.

# GET /observations
# ====================================
/observations:
  description: Observations by sensors
  get:
    description: Get all observations
    responses:
      200:
        body:
          application/json:
            example: |
              [{"id":1, "date": "2014-15-14 00:02:52", "value":54, "unit":"degree"}]
  post:
    description: Add an observation
    body:
      application/json:
        example: |
          {"date": "2014-15-14 00:02:52", "value":54, "unit":"degree"}
  
# GET /facts 
# ====================================
/facts:
  description: Fact is generate by organisation to store  observations result. 
  get:
    description: Get all facts 
    responses:
      200:
        body:
          application/json:
            example: |
               [{ "id" : 1, "date" : "2014-11-09 00:02:01", "value" : "23", "type" : "max/average/min" }]
            
  # POST /facts 
  # ====================================
  post:
    description: Create a fact.
    body:
      application/json:
        example: |
          { "date" : "2014-11-09", "value" : "23", "type" : "max/average/min", "organisation_id" : 1 }
    responses:
      201:
        body:
          application/json:
            example: |
              { "id": 1, "date" : "2014-11-09", "value" : "23", "type" : "max/average/min"}
  
  # GET /facts/:id 
  # ====================================
  /{id}:
    get:
      description: Retrieve a resource.
      responses:
        200:
          body:
            application/json:
              example: |
                { "id": 1, "date" : "2014-11-09", "value" : "23", "type" : "max/average/min"}
        404:
          description: The resource was not found.
    
    # DELETE /facts/:id 
    # ====================================
    delete:
      description: Delete a resource.
  
  # GET /facts/:id/min 
  # ====================================
  /{id}/min:
    get:
      description: Get all facts min
      responses:
        200:
          body:
            application/json:
              example: |
                { "id": 1, "date" : "2014-11-09", "value" : "23"}

  # GET /facts/:id/max
  # ====================================
  /{id}/max:
    get:
      description: Get all facts min
      responses:
        200:
          body:
            application/json:
              example: |
                { "id": 1, "date" : "2014-11-09", "value" : "23"}

  # GET /facts/:id/average
  # ====================================
  /{id}/average:
    get:
      description: Get all facts min
      responses:
        200:
          body:
            application/json:
              example: |
                { "id": 1, "date" : "2014-11-09", "value" : "23"}
